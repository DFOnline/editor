@use '../main/main.scss' as *;

@font-face{
    font-family:"minecraft-ten-regular";
    src:url("./MinecraftRegular-Bmg3.otf") format("opentype");
}

// $codeBlockSize: min(300px,80vh);
$codeBlockSize: 20em;
#codeBlocks {
    height: 100vh;
    overflow: hidden;
    margin-top: 31px;
    display: flex;
    .block {
        position: relative;
        width: max-content;
        max-width: $codeBlockSize;
        min-width: calc($codeBlockSize / 2);
        height: $codeBlockSize;
        display: flex;
        .mat {
            display: grid;
            place-items: center;
            &.event         { background-image: url( ../media/blocks/event.png         );}
            &.player_action { background-image: url( ../media/blocks/player_action.png );}
            &.if_player     { background-image: url( ../media/blocks/if_player.png     );}
            &.process       { background-image: url( ../media/blocks/process.png       );}
            &.start_process { background-image: url( ../media/blocks/start_process.png );}
            &.func          { background-image: url( ../media/blocks/func.png          );}
            &.call_func     { background-image: url( ../media/blocks/call_func.png     );}
            &.entity_event  { background-image: url( ../media/blocks/entity_event.png  );}
            &.entity_action { background-image: url( ../media/blocks/entity_action.png );}
            &.if_entity     { background-image: url( ../media/blocks/if_entity.png     );}
            &.if_let        { background-image: url( ../media/blocks/if_var.png        );}
            &.set_let       { background-image: url( ../media/blocks/set_var.png       );}
            &.if_game       { background-image: url( ../media/blocks/if_game.png       );}
            &.game_action   { background-image: url( ../media/blocks/game_action.png   );}
            &.repeat        { background-image: url( ../media/blocks/repeat.png        );}
            &.control       { background-image: url( ../media/blocks/control.png       );}
            &.select_obj    { background-image: url( ../media/blocks/select_obj.png    );}
            &.else          { background-image: url( ../media/blocks/else.png          );}
            &.loader        { background-image: url( ../media/blocks/loader.png        );}
            &.call_loader   { background-image: url( ../media/blocks/call_loader.png   );}
            &.piston        {
                              background-image: url(../media/blocks/piston.png);
                &.repeat    { background-image: url(../media/blocks/pistonSticky.png   );}
                &.close     { transform: scaleX(-1); width: $codeBlockSize; background-position: left; display: flex;}
            }
        }
        .air {background-image: none;}
        .chest {background-image: url(../media/blocks/chest.png);}
        .stone {height: $codeBlockSize; background-image: url(../media/blocks/stone.png);}
        .sign {
            font-family:"minecraft-ten-regular";
            font-weight: lighter;
            background-image: url(../media/blocks/sign.png);
            width: calc($codeBlockSize / 2);
            height: calc($codeBlockSize / 4);
            background-size: cover;
            display: block;
            span {
                text-align: center;
                display: block;
                height: min-content;
                font-size: calc((14 / 300 /* magic */) * $codeBlockSize);
                font-size: calc($codeBlockSize / 20);
                color: black;
                min-height: calc((18 / 300) * $codeBlockSize);
                user-select: none;
            }
        }
        transition: 0.2s top;
        top: 0px;
        // &:hover {
        //    top: -3px;
        // }
    }
}
.block * {
    min-width: calc($codeBlockSize / 2);
    max-width: $codeBlockSize;
    height: calc($codeBlockSize / 2);
    background-size: contain;
    background-position: bottom;
    background-repeat: no-repeat;
    display: grid;
}

#chest {
    background-color: $level1;
    display: flex;
    flex-wrap: wrap;
    margin: auto;
    padding: 2px;
    border-radius: 6px;
    .slot {
        position: relative;
        $margin: 5px;
        background-color: $level3;
        border-radius: 4px;
        min-width: calc((100% / 9) - ($margin * 2));
        width: calc((100% / 9) - ($margin * 2));
        max-width: calc((100% / 9) - ($margin * 2));
        max-height: calc((100% / 3) - ($margin * 2));
        height: calc((100% / 3) - ($margin * 2));
        min-height: calc((100% / 3) - ($margin * 2));
        margin: $margin;
        &:before{
            content: "";
            display: block;
            padding-top: 100%;  /* initial ratio of 1:1*/
        }
    }
    .item {
        width: unset;
        display: flex;
        position: absolute;
        $add: -3%;
        left: calc(($add / 2) * -1);
        top: calc(($add / 2) * -1);
        width: calc(100% + $add);
        height: calc(100% + $add);
        background-size: cover;
        > span {
            width: 100%;
            align-self: flex-end;
            text-align: end;
            font-family: "minecraft-ten-regular";
            height: min-content;
            position: relative;
            bottom: -10%;
            font-size: larger;
        }
        &.full {
            cursor: none;
        }

    }
}


html,body {
    overflow-y: hidden;
}

#mouseinfo hr { opacity: 0; }

#context {
    $value: 5px;
    display: none;
    position: fixed;
    background-color: $level1;
    padding: $value;
    top: 0px;
    left: 0px;
    border-radius: $value;
    $maxHeight: 400px;
    max-height: $maxHeight;
    overflow-y: auto;
    overflow-x: clip;
    width: fit-content;
    div {
        max-height: $maxHeight;
        overflow-y: auto;
        overflow-x: clip;
        display: grid;
        width: fit-content;
    }
    button {
        margin: 0;
        box-shadow: none;
        // background-color: adjust-color($color: $level1, $saturation: 0%, $lightness: 2.5%);
        padding: $value;
        border-radius: $value;
        // &:active {
        //     background-color: $level2;
        // }
    }
    hr {
        width: calc(100% - $value);
        margin: 2px 0;
    }
}

header {
    top: 0;
    width: 100vw;
    position: fixed;
    background-color: $level1;
    box-shadow: black 10px 0px 10px;
    button {
        border-radius: 0;
        margin: 0;
        box-shadow: black 1px 1px 0px;
        outline: black solid 0.5px;
    }
}

#newblocks {
    display: grid;
    position: fixed;
    bottom: 0;
    left: 0;
    background-color: $level2;
    border-radius: 0px 10px 0px 0px;
    padding: 3px;
    #toggle {
        cursor: pointer;
        width: 100%;
        height: 15px;
        display: flex;
        span {
            margin: auto;
            margin-right: 0;
            background-color: black;
            width: 10px;
            height: 10px;
            border-radius: 50%;
        }
    }
    #blocks {
        cursor: grab;
        display: flex;
        div {
            background-size: cover;
            width: 5em;
            height: 5em;
        }
    }
}

.newValue {
    background: none;
    background-size: cover;

    width: 60px;
    aspect-ratio: 1 / 1;
    // // make the element as tall as it is wide
    // &:before {
    //     content: "";
    //     display: block;
    //     padding-top: 100%;  /* initial ratio of 1:1*/
    // }

    border: none;
    box-shadow: none;
    padding: 0;
    margin: 5px;
}